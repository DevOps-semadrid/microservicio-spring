pool:
  vmImage: ubuntu-latest

steps:
- task: Gradle@3
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'build jacocoTestReport'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: false
    spotBugsAnalysis: false
  displayName: 'Build Plugin'
  
- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'JaCoCo'
    summaryFileLocation: '$(Build.SourcesDirectory)/build/reports/jacoco/test/jacocoTestReport.xml'
    reportDirectory: '$(Build.SourcesDirectory)/build/reports/jacoco/test/html'
  displayName: 'Public coverage unit test'
- task: BuildQualityChecks@8
  inputs:
    checkWarnings: true
    warningFailOption: 'build'
    checkCoverage: true
    coverageFailOption: 'fixed'
    coverageType: 'lines'
    coverageThreshold: '70'
    baseBranchRef: '$(System.PullRequest.TargetBranch)'
  displayName: 'Check coverage'
- task: CopyFiles@2
  inputs:
    sourceFolder: '$(Build.SourcesDirectory)'
    contents: |
        **/build/libs/*.jar
        **/build/**/*.xml
        **/build/**/*.html
    targetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)'
    publishLocation: 'Container'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'sonarCloud'
    organization: 'devops-semadrid'
    projectKey: 'DevOps-semadrid_microservicio-spring'
    projectName: 'microservicio-spring'
  displayName: 'Prepare SonarCloud'
  
- task: Gradle@3
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'sonarqube'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: true
    sqGradlePluginVersionChoice: 'specify'
    sonarQubeGradlePluginVersion: '3.3'
    spotBugsAnalysis: false
  displayName: SonarCloud Analysis

- task: Docker@2
  inputs:
    containerRegistry: 'Docker'
    command: 'login'
  displayName: Docker Login

- task: Docker@2
  inputs:
    containerRegistry: 'Docker'
    repository: 'semadrid/microservicio-spring'
    command: 'build'
    Dockerfile: '**/Dockerfile'
    tags: 'latest'
  displayName: Docker build
    
- task: Docker@2
  inputs:
    containerRegistry: 'Docker'
    repository: 'semadrid/microservicio-spring'
    command: 'push'
    tags: 'latest'
  displayName: Docker Push

- task: KubectlInstaller@0
  inputs:
    kubectlVersion: 'latest'

- task: Kubernetes@1
  inputs:
    connectionType: 'None'
    namespace: 'default'
    command: 'apply'
    arguments: '-f deployment-app.yaml'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'